<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="temperature_8h" kind="file" language="C++">
    <compoundname>temperature.h</compoundname>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="i2c_8h" local="yes">i2c.h</includes>
    <includes local="no">mqueue.h</includes>
    <includedby refid="main_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/main.c</includedby>
    <includedby refid="socket_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/socket.c</includedby>
    <includedby refid="temperature_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c</includedby>
    <includedby refid="watchdog_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c</includedby>
    <incdepgraph>
      <node id="87">
        <label>mraa/i2c.h</label>
      </node>
      <node id="85">
        <label>mqueue.h</label>
      </node>
      <node id="79">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>i2c.h</label>
        <link refid="i2c_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>pthread.h</label>
      </node>
      <node id="78">
        <label>/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h</label>
        <link refid="temperature_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>unistd.h</label>
      </node>
      <node id="84">
        <label>semaphore.h</label>
      </node>
      <node id="80">
        <label>signal.h</label>
      </node>
      <node id="81">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="92">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c</label>
        <link refid="watchdog_8c"/>
      </node>
      <node id="89">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="90">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/socket.c</label>
        <link refid="socket_8c"/>
      </node>
      <node id="88">
        <label>/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h</label>
        <link refid="temperature_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c</label>
        <link refid="temperature_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structconv__res__t" prot="public">conv_res_t</innerclass>
    <innerclass refid="structtmp102__mode__t" prot="public">tmp102_mode_t</innerclass>
    <innerclass refid="structtmp102__config__t" prot="public">tmp102_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="temperature_8h_1a9b949004c6544cc5478416284c1e2e74" prot="public" static="no">
        <name>TEMP_QUEUE_NAME</name>
        <initializer>&quot;/temperature-queue&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="28" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a52b51038057cc25cb63a5cc9c1b3a2c0" prot="public" static="no">
        <name>TMP102_SLAVE</name>
        <initializer>(0x48)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default address for Temperature Sensor TMP102 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="31" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a67feb48f0e5b0886495ad829ae99e75b" prot="public" static="no">
        <name>TMP102_REG_TEMP</name>
        <initializer>(0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Regsiter addresses for TMP102 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="34" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a46ffcfde3e3a44bfde31ea6665977fa8" prot="public" static="no">
        <name>TMP102_REG_CONFIG</name>
        <initializer>(0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="35" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a7551701523a04bdada79c24197fba0ab" prot="public" static="no">
        <name>TMP102_TLOW</name>
        <initializer>(0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="36" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1adecf4c343ccf7dc4c869cec36cd58af3" prot="public" static="no">
        <name>TMP102_THIGH</name>
        <initializer>(0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="37" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a26deb1cdb6af48dfb3246342d9434321" prot="public" static="no">
        <name>TMP102_SHUTDOWN_MODE</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default configuration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="40" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a77461dd91ab162d0a58302b96967bef7" prot="public" static="no">
        <name>TMP102_THERMOSTAT_MODE</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="41" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a05b6e862f1b7dc821204c7da3c90b3d6" prot="public" static="no">
        <name>TMP102_POLARITY</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="42" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a8720f925c413a7b74dd92e4971d3d2c8" prot="public" static="no">
        <name>TMP102_FAULT_QUEUE</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="43" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a004b5480fe0479636c7d5024ebd2f367" prot="public" static="no">
        <name>TMP102_RESOLUTION_0</name>
        <initializer>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="44" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a49440aa65a33229866045b3958fc67a2" prot="public" static="no">
        <name>TMP102_RESOLUTION_1</name>
        <initializer>(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="45" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1a5d3a6fe5a2fb2c689ede8e66587c9d7a" prot="public" static="no">
        <name>TMP102_EXTENDED_MODE</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="46" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="temperature_8h_1add77d1672623e7736c35ed03b07675a2" prot="public" static="no">
        <name>TMP102_CONVERSION_RATE</name>
        <initializer>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="47" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="temperature_8h_1a47f06fefabeb93c38acaface0c1f0a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float get_temperature</definition>
        <argsstring>(void)</argsstring>
        <name>get_temperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns last temperature reading we have. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: get_temperature <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>last_temp_value - last temperature reading we have <heading level="1">&lt;+DETAILED+&gt; </heading>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="81" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1acd7ca9077d8d9806394cf01abdc944e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tmp102_write_config</definition>
        <argsstring>(tmp102_config_t *config_reg)</argsstring>
        <name>tmp102_write_config</name>
        <param>
          <type><ref refid="structtmp102__config__t" kindref="compound">tmp102_config_t</ref> *</type>
          <declname>config_reg</declname>
        </param>
        <briefdescription>
<para>Write configuration register of TMP102 sensor. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: tmp102_write_config <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*config_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to struct with values to write to configuration register <heading level="1">see <ref refid="i2c_8c_1a3b5f6dfe9cedb7ea92f9076cfc25c472" kindref="member">i2c_write()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="92" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1ae8c3bd4aa2bae886c806126b137260cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tmp102_get_temp</definition>
        <argsstring>(float *temperature)</argsstring>
        <name>tmp102_get_temp</name>
        <param>
          <type>float *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>Read temperature registers fo TMP102 sensor and decode temperature value. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: tmp102_get_temp <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to write decoded value to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EXIT_CLEAN if successful, otherwise EXIT_ERROR <heading level="1">&lt;+DETAILED+&gt; </heading>
</para></simplesect>
</para><para>================================================================================= Function: tmp102_get_temp <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to write decoded value to <heading level="1">EXIT_CLEAN if successful, otherwise EXIT_ERROR </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="104" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="96" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1a3981b7fa33f651b8ccb69c57a367d2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tmp102_write_thigh</definition>
        <argsstring>(float thigh)</argsstring>
        <name>tmp102_write_thigh</name>
        <param>
          <type>float</type>
          <declname>thigh</declname>
        </param>
        <briefdescription>
<para>Write value thigh (in celsius) to Thigh register for TMP102 sensor. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: tmp102_write_thigh <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thigh</parametername>
</parameternamelist>
<parameterdescription>
<para>- value to write to Thigh register <heading level="1">EXIT_CLEAN if successful, otherwise EXIT_ERROR </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="115" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="130" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1a1f00b98eda6de0f346820505fe01d35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tmp102_write_tlow</definition>
        <argsstring>(float tlow)</argsstring>
        <name>tmp102_write_tlow</name>
        <param>
          <type>float</type>
          <declname>tlow</declname>
        </param>
        <briefdescription>
<para>Write value tlow (in celsius) to Tlow register for TMP102 sensor. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: tmp102_write_tlow <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlow</parametername>
</parameternamelist>
<parameterdescription>
<para>- value to write to Tlow register <heading level="1">EXIT_CLEAN if successful, otherwise EXIT_ERROR </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="126" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="175" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1a4d0f60419e315719e9ae80690a40240f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tmp102_read_thigh</definition>
        <argsstring>(float *thigh)</argsstring>
        <name>tmp102_read_thigh</name>
        <param>
          <type>float *</type>
          <declname>thigh</declname>
        </param>
        <briefdescription>
<para>Read value of THigh register of TMP102 sensor and store value (in celsius) in thigh. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: tmp102_read_thigh <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thigh</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to store decoded temperature value to <heading level="1">EXIT_CLEAN if successful, EXIT_ERROR otherwise </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="137" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="220" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1abd5568ce7a9d3c7f0c13bea9138b5bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tmp102_read_tlow</definition>
        <argsstring>(float *tlow)</argsstring>
        <name>tmp102_read_tlow</name>
        <param>
          <type>float *</type>
          <declname>tlow</declname>
        </param>
        <briefdescription>
<para>Read value of TLow register of TMP102 sensor and store value (in celsius) in tlow. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: tmp102_read_tlow <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlow</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to store decoded temperature value to <heading level="1">EXIT_CLEAN if successful, EXIT_ERROR otherwise </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="148" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="257" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1a4fb20f64bbc451d19252c2748bad1cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mqd_t</type>
        <definition>mqd_t get_temperature_queue</definition>
        <argsstring>(void)</argsstring>
        <name>get_temperature_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get file descriptor for temperature sensor thread. Called by watchdog thread in order to be able to send heartbeat check via queue. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: get_temperature_queue <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">temp_queue - file descriptor for temperature sensor thread message queue </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="160" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1a8eabbde1b6f330ffc5ccc89d30064138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int temp_queue_init</definition>
        <argsstring>(void)</argsstring>
        <name>temp_queue_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message queue for temperature sensor thread. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: temp_queue_init <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">msg_q - file descriptor for initialized message queue </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="171" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="428" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="temperature_8h_1ae0afede2f0dcd1931da5bed09ae70cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* temperature_fn</definition>
        <argsstring>(void *thread_args)</argsstring>
        <name>temperature_fn</name>
        <param>
          <type>void *</type>
          <declname>thread_args</declname>
        </param>
        <briefdescription>
<para>Entry point for temperature sensor processing thread. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: temperature_fn <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread_args</parametername>
</parameternamelist>
<parameterdescription>
<para>- void ptr to arguments used to initialize thread </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL - We don&apos;t really exit from this function, <heading level="1">since the exit point is <ref refid="common_8c_1a760f8eb17501e01a6673e2ec911ba1cb" kindref="member">thread_exit()</ref> </heading>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h" line="183" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/temperature.c" bodystart="462" bodyend="503"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header for temperature sensor thread. </para>    </briefdescription>
    <detaileddescription>
<para>=================================================================================</para><para><simplesect kind="author"><para>Roberto Baquerizo (baquerrj), <ulink url="mailto:roba8460@colorado.edu">roba8460@colorado.edu</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="20"><highlight class="preprocessor">#ifndef<sp/>TEMPERATURE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEMPERATURE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2c_8h" kindref="compound">i2c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mqueue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEMP_QUEUE_NAME<sp/>&quot;/temperature-queue&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="temperature_8h_1a52b51038057cc25cb63a5cc9c1b3a2c0" refkind="member"><highlight class="preprocessor">#define<sp/>TMP102_SLAVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x48)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="temperature_8h_1a67feb48f0e5b0886495ad829ae99e75b" refkind="member"><highlight class="preprocessor">#define<sp/>TMP102_REG_TEMP<sp/><sp/><sp/><sp/>(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_REG_CONFIG<sp/><sp/>(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_TLOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_THIGH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="temperature_8h_1a26deb1cdb6af48dfb3246342d9434321" refkind="member"><highlight class="preprocessor">#define<sp/>TMP102_SHUTDOWN_MODE<sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_THERMOSTAT_MODE<sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_POLARITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_FAULT_QUEUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_RESOLUTION_0<sp/><sp/><sp/><sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_RESOLUTION_1<sp/><sp/><sp/><sp/><sp/><sp/>(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_EXTENDED_MODE<sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMP102_CONVERSION_RATE<sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structconv__res__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>res_0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>res_1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><ref refid="structconv__res__t" kindref="compound">conv_res_t</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structtmp102__mode__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>shutdown;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>thermostat;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><ref refid="structtmp102__mode__t" kindref="compound">tmp102_mode_t</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structtmp102__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="structtmp102__mode__t" kindref="compound">tmp102_mode_t</ref><sp/>mode;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shutdown<sp/>and<sp/>thermostat<sp/>modes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>polarity;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>polarity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>fault_queue;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fault<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="structconv__res__t" kindref="compound">conv_res_t</ref><sp/>resolution;<sp/><sp/></highlight><highlight class="comment">/*<sp/>converter<sp/>resolution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>one_shot;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>in<sp/>shutdown<sp/>mode,<sp/>writing<sp/>1<sp/>starts<sp/>a<sp/>single<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>operation;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extended<sp/>vs<sp/>normal<sp/>operation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>alert;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alerrt<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>conv_rate;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>conversion<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="structtmp102__config__t" kindref="compound">tmp102_config_t</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1a47f06fefabeb93c38acaface0c1f0a1d" kindref="member">get_temperature</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1acd7ca9077d8d9806394cf01abdc944e4" kindref="member">tmp102_write_config</ref>(<sp/><ref refid="structtmp102__config__t" kindref="compound">tmp102_config_t</ref><sp/>*config_reg<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1ae8c3bd4aa2bae886c806126b137260cc" kindref="member">tmp102_get_temp</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*temperature<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1a3981b7fa33f651b8ccb69c57a367d2a6" kindref="member">tmp102_write_thigh</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thigh<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1a1f00b98eda6de0f346820505fe01d35a" kindref="member">tmp102_write_tlow</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tlow<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1a4d0f60419e315719e9ae80690a40240f" kindref="member">tmp102_read_thigh</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*thigh<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1abd5568ce7a9d3c7f0c13bea9138b5bec" kindref="member">tmp102_read_tlow</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tlow<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">mqd_t<sp/><ref refid="temperature_8h_1a4fb20f64bbc451d19252c2748bad1cb6" kindref="member">get_temperature_queue</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="temperature_8h_1a8eabbde1b6f330ffc5ccc89d30064138" kindref="member">temp_queue_init</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="temperature_8h_1ae0afede2f0dcd1931da5bed09ae70cd4" kindref="member">temperature_fn</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_args<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TEMPERATURE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/temperature.h"/>
  </compounddef>
</doxygen>
