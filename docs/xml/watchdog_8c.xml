<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="watchdog_8c" kind="file" language="C++">
    <compoundname>watchdog.c</compoundname>
    <includes refid="watchdog_8h" local="yes">watchdog.h</includes>
    <includes refid="temperature_8h" local="yes">temperature.h</includes>
    <includes refid="light_8h" local="yes">light.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="247">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c</label>
        <link refid="watchdog_8c"/>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>mraa/i2c.h</label>
      </node>
      <node id="248">
        <label>watchdog.h</label>
        <link refid="watchdog_8h"/>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>errno.h</label>
      </node>
      <node id="255">
        <label>mqueue.h</label>
      </node>
      <node id="249">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>i2c.h</label>
        <link refid="i2c_8h"/>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>light.h</label>
        <link refid="light_8h"/>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>pthread.h</label>
      </node>
      <node id="261">
        <label>string.h</label>
      </node>
      <node id="256">
        <label>temperature.h</label>
        <link refid="temperature_8h"/>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>unistd.h</label>
      </node>
      <node id="254">
        <label>semaphore.h</label>
      </node>
      <node id="250">
        <label>signal.h</label>
      </node>
      <node id="262">
        <label>time.h</label>
      </node>
      <node id="251">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="watchdog_8c_1a7c22bf62313ce4f2bbe148ca7ba2abd3" prot="public" static="yes" mutable="no">
        <type>timer_t</type>
        <definition>timer_t timerid</definition>
        <argsstring></argsstring>
        <name>timerid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="31" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="watchdog_8c_1a3dfce1828c167eae81a00615b18296df" prot="public" static="no" mutable="no">
        <type>struct itimerspec</type>
        <definition>struct itimerspec trigger</definition>
        <argsstring></argsstring>
        <name>trigger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="31" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="watchdog_8c_1acbc9353f339ceb8f5d12bff29bf3951a" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structthread__id__s" kindref="compound">thread_id_s</ref> *</type>
        <definition>struct thread_id_s* threads</definition>
        <argsstring></argsstring>
        <name>threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="34" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="watchdog_8c_1a9f6fd594e8c49716bfd76538e46e62c4" prot="public" static="yes" mutable="no">
        <type>mqd_t</type>
        <definition>mqd_t thread_msg_q[NUM_THREADS]</definition>
        <argsstring>[NUM_THREADS]</argsstring>
        <name>thread_msg_q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="35" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="watchdog_8c_1aed4f753b6928e9e5d5a7439a6bfaf5cb" prot="public" static="yes" mutable="no">
        <type>mqd_t</type>
        <definition>mqd_t watchdog_queue</definition>
        <argsstring></argsstring>
        <name>watchdog_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="36" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="watchdog_8c_1a894607e556ddb03a8409f7245ae74e9d" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t alive_mutex</definition>
        <argsstring></argsstring>
        <name>alive_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="38" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="watchdog_8c_1a366471b5822de7615f33cbe5eab9726a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sig_handler</definition>
        <argsstring>(int signo)</argsstring>
        <name>sig_handler</name>
        <param>
          <type>int</type>
          <declname>signo</declname>
        </param>
        <briefdescription>
<para>Signal handler for watchdog. On normal operation, we should be receiving a SIGUSR2 signal from the main thread prompting us to call pthread_kill for the other child threads. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: sig_handler <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>signo</parametername>
</parameternamelist>
<parameterdescription>
<para>- enum with signal number of signal being handled <heading level="1">void </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="52" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="52" bodyend="61"/>
        <referencedby refid="watchdog_8h_1ad69c59482b6b55ec28d5eb51bf01ce52" compoundref="watchdog_8c" startline="216" endline="236">watchdog_fn</referencedby>
      </memberdef>
      <memberdef kind="function" id="watchdog_8c_1afcff12ebeae3126251c60440eec3247b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kill_threads</definition>
        <argsstring>(void)</argsstring>
        <name>kill_threads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to kill children threads. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: kill_threads <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">void </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="72" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="72" bodyend="90"/>
        <referencedby refid="watchdog_8c_1a366471b5822de7615f33cbe5eab9726a" compoundref="watchdog_8c" startline="52" endline="61">sig_handler</referencedby>
      </memberdef>
      <memberdef kind="function" id="watchdog_8c_1ad237b88f34b264a1c3c3965f765f730f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_threads</definition>
        <argsstring>(union sigval sig)</argsstring>
        <name>check_threads</name>
        <param>
          <type>union sigval</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
<para>Periodically send message via message queue for temperature and sensor threads to check for health. This function is registered as the timer hanlder for the timer owned by the watchdog. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: check_threads <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sig</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">void </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="103" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="103" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="watchdog_8c_1afabbc670717ce1fd6b791b6c5a618517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int watchdog_queue_init</definition>
        <argsstring>(void)</argsstring>
        <name>watchdog_queue_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initalize message queue for watchdog. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: watchdog_queue_init <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">msg_q - file descriptor for initialized message queue </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="152" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="152" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="watchdog_8c_1a5fce3bd6c685cff6e3a4be0764c3a933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int watchdog_init</definition>
        <argsstring>(void)</argsstring>
        <name>watchdog_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize watchdog, calling appropriate functions to do so. E.g. calling timer_setup and timer_start to set up timer. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: watchdog_init <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">EXIT_CLEAN, otherwise EXIT_INIT </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="183" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="183" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="watchdog_8c_1ad69c59482b6b55ec28d5eb51bf01ce52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* watchdog_fn</definition>
        <argsstring>(void *thread_args)</argsstring>
        <name>watchdog_fn</name>
        <param>
          <type>void *</type>
          <declname>thread_args</declname>
        </param>
        <briefdescription>
<para>Entry point for wachtdog. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: watchdog_fn <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread_args</parametername>
</parameternamelist>
<parameterdescription>
<para>- void ptr used to pass thread identifiers (pthread_t) for child threads we have to check for health </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL - We don&apos;t really exit from this function, <heading level="1">since the exit point for threads is <ref refid="common_8c_1a760f8eb17501e01a6673e2ec911ba1cb" kindref="member">thread_exit()</ref> </heading>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" line="216" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c" bodystart="216" bodyend="236"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Watchdog source file: the watchdog is responsible for checking that the temperature and light sensor threads are alive. </para>    </briefdescription>
    <detaileddescription>
<para>=================================================================================</para><para><simplesect kind="author"><para>Roberto Baquerizo (baquerrj), <ulink url="mailto:roba8460@colorado.edu">roba8460@colorado.edu</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="watchdog_8h" kindref="compound">watchdog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="temperature_8h" kindref="compound">temperature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="light_8h" kindref="compound">light.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>timer_t<sp/><sp/><sp/><sp/>timerid;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">itimerspec<sp/>trigger;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structthread__id__s" kindref="compound">thread_id_s</ref>*<sp/>threads;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mqd_t<sp/>thread_msg_q[NUM_THREADS];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mqd_t<sp/>watchdog_queue;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">pthread_mutex_t<sp/>alive_mutex;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="watchdog_8c_1a366471b5822de7615f33cbe5eab9726a" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="watchdog_8c_1a366471b5822de7615f33cbe5eab9726a" kindref="member">sig_handler</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signo<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SIGUSR2<sp/>==<sp/>signo<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="watchdog_8c_1afcff12ebeae3126251c60440eec3247b" kindref="member">kill_threads</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mq_close(<sp/>watchdog_queue<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_delete(<sp/>timerid<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8c_1a760f8eb17501e01a6673e2ec911ba1cb" kindref="member">thread_exit</ref>(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="watchdog_8h_1afcff12ebeae3126251c60440eec3247b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="watchdog_8c_1afcff12ebeae3126251c60440eec3247b" kindref="member">kill_threads</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>fprintf(<sp/>stdout,<sp/></highlight><highlight class="stringliteral">&quot;watchdog<sp/>caught<sp/>signals<sp/>-<sp/>killing<sp/>thread<sp/>[%ld]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads-&gt;temp_thread<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>fflush(<sp/>stdout<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>pthread_kill(<sp/>threads-&gt;temp_thread,<sp/>SIGUSR1<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>fprintf(<sp/>stdout,<sp/></highlight><highlight class="stringliteral">&quot;watchdog<sp/>caught<sp/>signals<sp/>-<sp/>killing<sp/>thread<sp/>[%ld]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads-&gt;light_thread<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>fflush(<sp/>stdout<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>pthread_kill(<sp/>threads-&gt;light_thread,<sp/>SIGUSR1<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>fprintf(<sp/>stdout,<sp/></highlight><highlight class="stringliteral">&quot;watchdog<sp/>caught<sp/>signals<sp/>-<sp/>killing<sp/>thread<sp/>[%ld]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads-&gt;logger_thread<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>fflush(<sp/>stdout<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>pthread_kill(<sp/>threads-&gt;logger_thread,<sp/>SIGUSR1<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>free(<sp/>threads<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="watchdog_8h_1ad237b88f34b264a1c3c3965f765f730f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="watchdog_8c_1ad237b88f34b264a1c3c3965f765f730f" kindref="member">check_threads</ref>(<sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/>sigval<sp/>sig<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="structmsg__t" kindref="compound">msg_t</ref><sp/>request<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>request.id<sp/>=<sp/>REQUEST_STATUS;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>request.src<sp/>=<sp/>watchdog_queue;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(0<sp/>==<sp/>threads_status[THREAD_TEMP])<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>threads_status[THREAD_LIGHT]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(<sp/>&amp;alive_mutex<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threads_status[THREAD_TEMP]++;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threads_status[THREAD_LIGHT]++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(<sp/>&amp;alive_mutex<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>mq_send(<sp/>thread_msg_q[THREAD_TEMP],<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;request,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>request<sp/>),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>&gt;<sp/>retVal<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errnum<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;Encountered<sp/>error<sp/>sending<sp/>status<sp/>request<sp/>from<sp/>watchdog:<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(<sp/>errnum<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>mq_send(<sp/>thread_msg_q[THREAD_LIGHT],<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;request,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>request<sp/>),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>&gt;<sp/>retVal<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errnum<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;Encountered<sp/>error<sp/>sending<sp/>status<sp/>request<sp/>from<sp/>watchdog:<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(<sp/>errnum<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;One<sp/>of<sp/>the<sp/>threads<sp/>did<sp/>not<sp/>return!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;thread_status[THREAD_TEMP]<sp/>=<sp/>%d\nthread_status[THREAD_LIGHT]<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads_status[THREAD_TEMP],<sp/>threads_status[THREAD_LIGHT]<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="watchdog_8c_1afcff12ebeae3126251c60440eec3247b" kindref="member">kill_threads</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8c_1a760f8eb17501e01a6673e2ec911ba1cb" kindref="member">thread_exit</ref>(<sp/>EXIT_ERROR<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="watchdog_8h_1afabbc670717ce1fd6b791b6c5a618517" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="watchdog_8c_1afabbc670717ce1fd6b791b6c5a618517" kindref="member">watchdog_queue_init</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlink<sp/>first<sp/>in<sp/>case<sp/>we<sp/>hadn&apos;t<sp/>shut<sp/>down<sp/>cleanly<sp/>last<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>mq_unlink(<sp/>WATCHDOG_QUEUE_NAME<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">mq_attr<sp/>attr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>attr.mq_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>attr.mq_maxmsg<sp/>=<sp/>MAX_MESSAGES;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>attr.mq_msgsize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structmsg__t" kindref="compound">msg_t</ref><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>attr.mq_curmsgs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_q<sp/>=<sp/>mq_open(<sp/>WATCHDOG_QUEUE_NAME,<sp/>O_CREAT<sp/>|<sp/>O_RDWR,<sp/>0666,<sp/>&amp;attr<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>&gt;<sp/>msg_q<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errnum<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;Encountered<sp/>error<sp/>creating<sp/>message<sp/>queue<sp/>%s:<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WATCHDOG_QUEUE_NAME,<sp/>strerror(<sp/>errnum<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg_q;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="watchdog_8h_1a5fce3bd6c685cff6e3a4be0764c3a933" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="watchdog_8c_1a5fce3bd6c685cff6e3a4be0764c3a933" kindref="member">watchdog_init</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>watchdog_queue<sp/>=<sp/><ref refid="watchdog_8c_1afabbc670717ce1fd6b791b6c5a618517" kindref="member">watchdog_queue_init</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>&gt;<sp/>watchdog_queue<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8c_1a760f8eb17501e01a6673e2ec911ba1cb" kindref="member">thread_exit</ref>(<sp/>EXIT_INIT<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>0<sp/>==<sp/>(thread_msg_q[THREAD_TEMP]<sp/>=<sp/><ref refid="temperature_8c_1a4fb20f64bbc451d19252c2748bad1cb6" kindref="member">get_temperature_queue</ref>())<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>0<sp/>==<sp/>(thread_msg_q[THREAD_LIGHT]<sp/>=<sp/><ref refid="light_8c_1a57d6c7de6874cb33b372559ea24ebb85" kindref="member">get_light_queue</ref>())<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;Watchdog<sp/>says:<sp/>Temp<sp/>Queue<sp/>FD:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>thread_msg_q[0]<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;Watchdog<sp/>says:<sp/>Light<sp/>Queue<sp/>FD:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>thread_msg_q[1]<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>pthread_mutex_init(<sp/>&amp;alive_mutex,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><ref refid="common_8c_1a78dd395e9020e2a6066233a529bff7be" kindref="member">timer_setup</ref>(<sp/>&amp;timerid,<sp/>&amp;<ref refid="watchdog_8c_1ad237b88f34b264a1c3c3965f765f730f" kindref="member">check_threads</ref><sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><ref refid="common_8c_1a207644f53334379d5fcb82b78bafff36" kindref="member">timer_start</ref>(<sp/>&amp;timerid,<sp/>4000000<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_CLEAN;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="watchdog_8h_1ad69c59482b6b55ec28d5eb51bf01ce52" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="watchdog_8c_1ad69c59482b6b55ec28d5eb51bf01ce52" kindref="member">watchdog_fn</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_args<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>signal(<sp/>SIGUSR2,<sp/><ref refid="watchdog_8c_1a366471b5822de7615f33cbe5eab9726a" kindref="member">sig_handler</ref><sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>exit_e<sp/>retVal<sp/>=<sp/>EXIT_ERROR;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>NULL<sp/>==<sp/>thread_args<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8c_1a8f714d490a7f06c3a43cfea239e2770f" kindref="member">print_header</ref>(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;Encountered<sp/>null<sp/>pointer!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_exit(&amp;retVal);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threads<sp/>=<sp/>malloc(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structthread__id__s" kindref="compound">thread_id_s</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threads<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structthread__id__s" kindref="compound">thread_id_s</ref>*)thread_args;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><ref refid="watchdog_8c_1a5fce3bd6c685cff6e3a4be0764c3a933" kindref="member">watchdog_init</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c"/>
  </compounddef>
</doxygen>
