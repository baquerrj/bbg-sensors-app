<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="light_8h" kind="file" language="C++">
    <compoundname>light.h</compoundname>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="i2c_8h" local="yes">i2c.h</includes>
    <includedby refid="light_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/light.c</includedby>
    <includedby refid="main_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/main.c</includedby>
    <includedby refid="socket_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/socket.c</includedby>
    <includedby refid="watchdog_8c" local="yes">/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c</includedby>
    <incdepgraph>
      <node id="50">
        <label>mraa/i2c.h</label>
      </node>
      <node id="48">
        <label>mqueue.h</label>
      </node>
      <node id="42">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>i2c.h</label>
        <link refid="i2c_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/home/baquerrj/boulder/ecen5013/project_1/inc/light.h</label>
        <link refid="light_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>pthread.h</label>
      </node>
      <node id="46">
        <label>unistd.h</label>
      </node>
      <node id="47">
        <label>semaphore.h</label>
      </node>
      <node id="43">
        <label>signal.h</label>
      </node>
      <node id="44">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="55">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/watchdog.c</label>
        <link refid="watchdog_8c"/>
      </node>
      <node id="52">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/light.c</label>
        <link refid="light_8c"/>
      </node>
      <node id="53">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="54">
        <label>/home/baquerrj/boulder/ecen5013/project_1/src/socket.c</label>
        <link refid="socket_8c"/>
      </node>
      <node id="51">
        <label>/home/baquerrj/boulder/ecen5013/project_1/inc/light.h</label>
        <link refid="light_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="light_8h_1a9fa6fdd6cc89e51fd75c5609d8c23639" prot="public" static="no">
        <name>LIGHT_QUEUE_NAME</name>
        <initializer>&quot;/light-queue&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="26" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1ace117bd470a690474f7e4943ebca656c" prot="public" static="no">
        <name>APDS9301_ADDRESS</name>
        <initializer>(0x39)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="28" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1ac2e33218e7b5df546d974d0c766d8b0b" prot="public" static="no">
        <name>APDS9301_REG_CMD</name>
        <initializer>(0x80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register adddresses </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="31" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a5d304b1a8d7b357ca064df364b17ce1e" prot="public" static="no">
        <name>APDS9301_REG_CNTRL</name>
        <initializer>(0x80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="32" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1afad9eae9314639d5b08d9e14ee3cf6d8" prot="public" static="no">
        <name>APDS9301_REG_TIME</name>
        <initializer>(0x81)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="33" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a1d0dfb2957c1897a12a2c17086036242" prot="public" static="no">
        <name>APDS9301_REG_TH_LL</name>
        <initializer>(0x82)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="34" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1abcf8a0b77d6e45f37185c777183af8c8" prot="public" static="no">
        <name>APDS9301_REG_TH_LH</name>
        <initializer>(0x83)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="35" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a2b46e5286ddfe674516eec43b2419fd7" prot="public" static="no">
        <name>APDS9301_REG_TH_HL</name>
        <initializer>(0x84)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="36" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a1b9c08d897b06e3fbbaeccfa57f133e4" prot="public" static="no">
        <name>APDS9301_REG_TH_HH</name>
        <initializer>(0x85)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="37" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1aa0da239142536ef587b9bd7cae33848b" prot="public" static="no">
        <name>APDS9301_REG_INT_CNTRL</name>
        <initializer>(0x86)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="38" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1addfa13f23e3d6b4fbd94f2b57abb7f9d" prot="public" static="no">
        <name>APDS9301_REG_ID</name>
        <initializer>(0x8A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="39" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a08ee6604413cfd6cb05c01acb2e6fb38" prot="public" static="no">
        <name>APDS9301_REG_DLOW_0</name>
        <initializer>(0x8C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="40" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a5fff9b916f5556b749371bb4406fa2cc" prot="public" static="no">
        <name>APDS9301_REG_DHIGH_0</name>
        <initializer>(0x8D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="41" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a7a9659c46f7ceab06b580eee67e409bb" prot="public" static="no">
        <name>APDS9301_REG_DLOW_1</name>
        <initializer>(0x8E)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="42" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1abfaa50f5022ddfc11efa8a7218f305c3" prot="public" static="no">
        <name>APDS9301_REG_DHIGH_1</name>
        <initializer>(0x8F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="43" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a14cdc4396ca692461b59fb937003115b" prot="public" static="no">
        <name>POWER_ON</name>
        <initializer>(0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helpful constants </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="46" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1ae8131694b06a62416e7b799b129de381" prot="public" static="no">
        <name>POWER_OFF</name>
        <initializer>(0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="47" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a432acf9545c71efeb2d898f66fc69a4a" prot="public" static="no">
        <name>CMD_CLEAR_INTR</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="48" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1acda6f184d1613bf9f8097555d724827f" prot="public" static="no">
        <name>CMD_WORD_ENBL</name>
        <initializer>(1&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="49" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1ae242ab0e0a91e95de561944085dbdf20" prot="public" static="no">
        <name>DEFAULT_GAIN</name>
        <initializer>(0x00)   /** low gain */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defaults </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="52" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a6c3481fd8c64f6c2fb26bf810737ebd5" prot="public" static="no">
        <name>DEFAULT_INTEGRATION_TIME</name>
        <initializer>(0x02)   /** 402ms integration time */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="53" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1ad84a55c2affa8cbbf6584ec59ffe8d8a" prot="public" static="no">
        <name>DEFAULT_INTERRUPT</name>
        <initializer>(0x00)   /** No interrupts */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="54" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="light_8h_1a671c37e83f14fe0fd1a219acef03e9ec" prot="public" static="no">
        <name>DARK_THRESHOLD</name>
        <initializer>(50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="56" column="9" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="light_8h_1a7f1c59e171c9db2a7609a4cd8b61fa2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float get_lux</definition>
        <argsstring>(void)</argsstring>
        <name>get_lux</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns last lux reading. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: get_lux <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">last_lux_value - last lux reading we have </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="68" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a5ba3d2c92432bf82f3f3cc4e809b1dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_dark</definition>
        <argsstring>(void)</argsstring>
        <name>is_dark</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns int speciyfing if it is night or day. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: is_dark <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">night - 0 if it is day, 1 if night, i.e. below DARK_THRESHOLD </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="79" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1ac3c04aef00858dc27815e190f8186cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_set_config</definition>
        <argsstring>(void)</argsstring>
        <name>apds9301_set_config</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set configuration of light sensor. For the APDS9301, the configuration is spread out across the: Timing Register, Interrupt Control Register, and Control Register. So, I have to write to all of these to set the config. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_set_config <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">EXIT_CLEAN if successful, otherwise see <ref refid="i2c_8c_1a3b5f6dfe9cedb7ea92f9076cfc25c472" kindref="member">i2c_write()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="92" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="165" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a99e9814d23261d099bf5d381d84d6642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_set_integration</definition>
        <argsstring>(uint8_t val)</argsstring>
        <name>apds9301_set_integration</name>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sets the integration time for APDS9301 by writing a value to bits INTEG of the Timing Register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_set_integration <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>- value to write to timing register <heading level="1">see <ref refid="i2c_8c_1acf2df3bfc71068fc8d551eed2a6e7341" kindref="member">i2c_write_byte()</ref> - if val is not an allowed value, EXIT_ERROR </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="105" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="201" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a145d5bf45a3d1527eaa860a2a4ce545b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_clear_interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>apds9301_clear_interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears any pending interrupt for APDS9301 by writing a 1 to the CLEAR bit of the Command Register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_clear_interrupt <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">see i2c_set() </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="118" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a3b06e19e8c55d93415a41352cf11de16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_set_interrupt</definition>
        <argsstring>(uint8_t enable)</argsstring>
        <name>apds9301_set_interrupt</name>
        <param>
          <type>uint8_t</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables interrupts for APDS9301 by setting or clearing the INTR bits of the Interrupt Control Register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_set_interrupt <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>- set if we want to enable interrupts <heading level="1">see <ref refid="i2c_8c_1acf2df3bfc71068fc8d551eed2a6e7341" kindref="member">i2c_write_byte()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="130" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="255" bodyend="276"/>
        <referencedby refid="light_8h_1ac3c04aef00858dc27815e190f8186cfd" compoundref="light_8c" startline="165" endline="189">apds9301_set_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a3063fd5cfc043ce2ac7c67f8af9b4b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_set_gain</definition>
        <argsstring>(uint8_t gain)</argsstring>
        <name>apds9301_set_gain</name>
        <param>
          <type>uint8_t</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Sets gain for APDS9301 by setting or clearing the GAIN bit of the Timing Register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_set_gain <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>- set if we want high gain <heading level="1">see <ref refid="i2c_8c_1acf2df3bfc71068fc8d551eed2a6e7341" kindref="member">i2c_write_byte()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="144" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="288" bodyend="310"/>
        <referencedby refid="light_8h_1ac3c04aef00858dc27815e190f8186cfd" compoundref="light_8c" startline="165" endline="189">apds9301_set_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a8e844b99f75ecdf6712faaaddc0eb396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_read_control</definition>
        <argsstring>(uint8_t *data)</argsstring>
        <name>apds9301_read_control</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read contents of Control Register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_read_control <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*data</parametername>
</parameternamelist>
<parameterdescription>
<para>- where to store contents <heading level="1">see <ref refid="i2c_8c_1aeecccc19faa9d25c282c0341631b7d2f" kindref="member">i2c_read()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="156" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="321" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1ae2c85da2e138447c5881122669c36a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_write_threshold_low</definition>
        <argsstring>(uint16_t threshold)</argsstring>
        <name>apds9301_write_threshold_low</name>
        <param>
          <type>uint16_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Write value to low threshold register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_write_threshold_low <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>- value to write <heading level="1">see <ref refid="i2c_8c_1a3b5f6dfe9cedb7ea92f9076cfc25c472" kindref="member">i2c_write()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="168" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="336" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a67500fb59f0ab2f2e46c3b6f945985b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_read_threshold_low</definition>
        <argsstring>(uint16_t *threshold)</argsstring>
        <name>apds9301_read_threshold_low</name>
        <param>
          <type>uint16_t *</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Read value from low threshold register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_write_threshold_low <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>- where to write value read <heading level="1">see <ref refid="i2c_8c_1a3b5f6dfe9cedb7ea92f9076cfc25c472" kindref="member">i2c_write()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="179" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="351" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1adb39e9954b4d948edea845453df2abf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_write_threshold_high</definition>
        <argsstring>(uint16_t threshold)</argsstring>
        <name>apds9301_write_threshold_high</name>
        <param>
          <type>uint16_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Write value to high threshold register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_write_threshold_high <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>- value to write <heading level="1">see <ref refid="i2c_8c_1a3b5f6dfe9cedb7ea92f9076cfc25c472" kindref="member">i2c_write()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="190" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="366" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a0005300d36508d20c372b5355d6546d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_read_threshold_high</definition>
        <argsstring>(uint16_t *threshold)</argsstring>
        <name>apds9301_read_threshold_high</name>
        <param>
          <type>uint16_t *</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Read value from high threshold register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_write_threshold_high <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>- where to write value read <heading level="1">see <ref refid="i2c_8c_1a3b5f6dfe9cedb7ea92f9076cfc25c472" kindref="member">i2c_write()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="201" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a6dbf3801330c345b999db86f018c94cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_read_id</definition>
        <argsstring>(uint8_t *id)</argsstring>
        <name>apds9301_read_id</name>
        <param>
          <type>uint8_t *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Read APDS9301 Identification Register. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_read_id <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*id</parametername>
</parameternamelist>
<parameterdescription>
<para>- where to write ID from register <heading level="1">EXIT_CLEAN if successful, EXIT_ERROR otherwise </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para><para>================================================================================= Function: apds9301_read_id <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*id</parametername>
</parameternamelist>
<parameterdescription>
<para>- where to write ID from register <heading level="1">see <ref refid="i2c_8c_1aeecccc19faa9d25c282c0341631b7d2f" kindref="member">i2c_read()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="213" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="396" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a14680b863ba54159dba03357d4745a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_get_lux</definition>
        <argsstring>(float *lux)</argsstring>
        <name>apds9301_get_lux</name>
        <param>
          <type>float *</type>
          <declname>lux</declname>
        </param>
        <briefdescription>
<para>Read ADC Registers and calculate lux in lumen. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_get_lux <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*lux</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to write decoded lux to <heading level="1">EXIT_CLEAN if successful, otherwise EXIT_ERROR </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para><para>Read ADC Registers and calculate lux in lumen.</para><para>================================================================================= Function: apds9301_get_lux <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*lux</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to write decoded lux to <heading level="1">EXIT_CLEAN if successful, otherwise EXIT_ERROR </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="225" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="412" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a96f9f9c1e4e86cc148aa0a334a399d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_read_data0</definition>
        <argsstring>(uint16_t *data)</argsstring>
        <name>apds9301_read_data0</name>
        <param>
          <type>uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read ADC register for channel 0. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= function: apds9301_read_data0 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*data</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to write decoded value to <heading level="1">EXIT_CLEAN if successful, otherwise exit_error </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="237" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="472" bodyend="494"/>
        <referencedby refid="light_8h_1a14680b863ba54159dba03357d4745a16" compoundref="light_8c" startline="412" endline="461">apds9301_get_lux</referencedby>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a342a83b7263a75c5b12bffc638b2797e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_read_data1</definition>
        <argsstring>(uint16_t *data)</argsstring>
        <name>apds9301_read_data1</name>
        <param>
          <type>uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read ADC register for channel 1. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= function: apds9301_read_data1 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*data</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to location to write decoded value to <heading level="1">EXIT_CLEAN if successful, otherwise exit_error </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="248" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="504" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a163ea457431a4845d5ff5fa205f670b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apds9301_power</definition>
        <argsstring>(uint16_t on)</argsstring>
        <name>apds9301_power</name>
        <param>
          <type>uint16_t</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>power on (or off) APDS9301 as set by paramater </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: apds9301_power <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>on</parametername>
</parameternamelist>
<parameterdescription>
<para>- specifies if sensor is to be powered on or off <heading level="1">see <ref refid="i2c_8c_1acf2df3bfc71068fc8d551eed2a6e7341" kindref="member">i2c_write_byte()</ref> </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="259" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="537" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a57d6c7de6874cb33b372559ea24ebb85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mqd_t</type>
        <definition>mqd_t get_light_queue</definition>
        <argsstring>(void)</argsstring>
        <name>get_light_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get file descriptor for light sensor thread. Called by watchdog thread in order to be able to send heartbeat check via queue. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: get_light_queue <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">temp_queue - file descriptor for light sensor thread message queue </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="271" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="614" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1abafa0fdb40560c48e4b98ec10f0e1f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int light_queue_init</definition>
        <argsstring>(void)</argsstring>
        <name>light_queue_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message queue for light sensor thread. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: light_queue_init <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para><heading level="1">msg_q - file descriptor for initialized message queue </heading>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="282" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="628" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="light_8h_1a1a3ec39083c9a030ae43f0e8bd3ea71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* light_fn</definition>
        <argsstring>(void *thread_args)</argsstring>
        <name>light_fn</name>
        <param>
          <type>void *</type>
          <declname>thread_args</declname>
        </param>
        <briefdescription>
<para>Entry point for light sensor processing thread. </para>        </briefdescription>
        <detaileddescription>
<para>================================================================================= Function: light_fn <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread_args</parametername>
</parameternamelist>
<parameterdescription>
<para>- void ptr to arguments used to initialize thread </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL - We don&apos;t really exit from this function, <heading level="1">since the exit point is <ref refid="common_8c_1a760f8eb17501e01a6673e2ec911ba1cb" kindref="member">thread_exit()</ref> </heading>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h" line="294" column="1" bodyfile="/home/baquerrj/boulder/ecen5013/project_1/src/light.c" bodystart="662" bodyend="712"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to APDS9301 Light Sensor. </para>    </briefdescription>
    <detaileddescription>
<para>=================================================================================</para><para><simplesect kind="author"><para>Roberto Baquerizo (baquerrj), <ulink url="mailto:roba8460@colorado.edu">roba8460@colorado.edu</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="20"><highlight class="preprocessor">#ifndef<sp/>LIGHT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIGHT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2c_8h" kindref="compound">i2c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIGHT_QUEUE_NAME<sp/>&quot;/light-queue&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_ADDRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x39)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="light_8h_1ac2e33218e7b5df546d974d0c766d8b0b" refkind="member"><highlight class="preprocessor">#define<sp/>APDS9301_REG_CMD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_CNTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x81)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_TH_LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x82)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_TH_LH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x83)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_TH_HL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x84)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_TH_HH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x85)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_INT_CNTRL<sp/><sp/><sp/>(0x86)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x8A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_DLOW_0<sp/><sp/><sp/><sp/><sp/><sp/>(0x8C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_DHIGH_0<sp/><sp/><sp/><sp/><sp/>(0x8D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_DLOW_1<sp/><sp/><sp/><sp/><sp/><sp/>(0x8E)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APDS9301_REG_DHIGH_1<sp/><sp/><sp/><sp/><sp/>(0x8F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="light_8h_1a14cdc4396ca692461b59fb937003115b" refkind="member"><highlight class="preprocessor">#define<sp/>POWER_ON<sp/><sp/><sp/><sp/><sp/>(0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POWER_OFF<sp/><sp/><sp/><sp/>(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_CLEAR_INTR<sp/><sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMD_WORD_ENBL<sp/><sp/><sp/>(1&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="light_8h_1ae242ab0e0a91e95de561944085dbdf20" refkind="member"><highlight class="preprocessor">#define<sp/>DEFAULT_GAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x00)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">#define<sp/>DEFAULT_INTEGRATION_TIME<sp/>(0x02)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">#define<sp/>DEFAULT_INTERRUPT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x00)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">#define<sp/>DARK_THRESHOLD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(50)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a7f1c59e171c9db2a7609a4cd8b61fa2c" kindref="member">get_lux</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a5ba3d2c92432bf82f3f3cc4e809b1dba" kindref="member">is_dark</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1ac3c04aef00858dc27815e190f8186cfd" kindref="member">apds9301_set_config</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a99e9814d23261d099bf5d381d84d6642" kindref="member">apds9301_set_integration</ref>(<sp/>uint8_t<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a145d5bf45a3d1527eaa860a2a4ce545b" kindref="member">apds9301_clear_interrupt</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a3b06e19e8c55d93415a41352cf11de16" kindref="member">apds9301_set_interrupt</ref>(<sp/>uint8_t<sp/>enable<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a3063fd5cfc043ce2ac7c67f8af9b4b2e" kindref="member">apds9301_set_gain</ref>(<sp/>uint8_t<sp/>gain<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a8e844b99f75ecdf6712faaaddc0eb396" kindref="member">apds9301_read_control</ref>(<sp/>uint8_t*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1ae2c85da2e138447c5881122669c36a38" kindref="member">apds9301_write_threshold_low</ref>(<sp/>uint16_t<sp/>threshold<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a67500fb59f0ab2f2e46c3b6f945985b5" kindref="member">apds9301_read_threshold_low</ref>(<sp/>uint16_t<sp/>*threshold<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1adb39e9954b4d948edea845453df2abf6" kindref="member">apds9301_write_threshold_high</ref>(<sp/>uint16_t<sp/>threshold<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a0005300d36508d20c372b5355d6546d9" kindref="member">apds9301_read_threshold_high</ref>(<sp/>uint16_t<sp/>*threshold<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a6dbf3801330c345b999db86f018c94cf" kindref="member">apds9301_read_id</ref>(<sp/>uint8_t<sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a14680b863ba54159dba03357d4745a16" kindref="member">apds9301_get_lux</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lux<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a96f9f9c1e4e86cc148aa0a334a399d8d" kindref="member">apds9301_read_data0</ref>(<sp/>uint16_t<sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a342a83b7263a75c5b12bffc638b2797e" kindref="member">apds9301_read_data1</ref>(<sp/>uint16_t<sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1a163ea457431a4845d5ff5fa205f670b7" kindref="member">apds9301_power</ref>(<sp/>uint16_t<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">mqd_t<sp/><ref refid="light_8h_1a57d6c7de6874cb33b372559ea24ebb85" kindref="member">get_light_queue</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="light_8h_1abafa0fdb40560c48e4b98ec10f0e1f43" kindref="member">light_queue_init</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="light_8h_1a1a3ec39083c9a030ae43f0e8bd3ea71d" kindref="member">light_fn</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_args<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIGHT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/baquerrj/boulder/ecen5013/project_1/inc/light.h"/>
  </compounddef>
</doxygen>
